plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlinx-serialization'
    id 'com.google.devtools.ksp' version '1.9.10-1.0.13'
    id 'kotlin-kapt'
    alias(libs.plugins.googleGms)
}

android {
    namespace 'com.st.robotics'
    compileSdk rootProject.compileSdk

    defaultConfig {
        applicationId "com.st.robotics"
        minSdk rootProject.minSdk
        targetSdk rootProject.targetSdk
        versionCode 3
        versionName "1.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        compose true
        viewBinding true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    // Blue ST SDK
    implementation (libs.st.blue.sdk)

    //network
    implementation libs.okhttp
    implementation libs.logging.interceptor
    testImplementation libs.junit.junit
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$desugaring_version"

    // Compose
    def composeBom = platform("androidx.compose:compose-bom:$compose_bom_date")
    implementation composeBom
    androidTestImplementation composeBom

    // Material Design 3
    implementation libs.material3

    // or Material Design 2
    implementation libs.androidx.material
    implementation libs.ui

    // Android Studio Preview support
    implementation libs.ui.tooling.preview
    debugImplementation libs.ui.tooling

    // UI Tests
    androidTestImplementation libs.ui.test.junit4
    debugImplementation libs.ui.test.manifest

    // Optional - Add full set of material icons
    implementation libs.androidx.material.icons.extended
    // Optional - Add window size utils
    implementation "androidx.compose.material3:material3-window-size-class"
    // LiveData
    implementation(libs.androidx.lifecycle.livedata.ktx)

    // Integration with activities
    implementation libs.androidx.activity.compose.v182
    //Integration with ViewModels
    implementation libs.androidx.lifecycle.viewmodel.compose
    implementation libs.androidx.lifecycle.runtime.compose
    //Integration with LiveData
    implementation(libs.androidx.runtime.livedata)
    //Integration with Hilt
    implementation libs.androidx.hilt.navigation.compose
    //Integration with Navigation
    implementation libs.androidx.navigation.compose
    //Integration with ViewBinding
    implementation libs.androidx.ui.viewbinding

    // Core
    implementation libs.androidx.core.ktx.v1120
    implementation libs.material
    implementation libs.androidx.lifecycle.runtime.ktx.v270
    implementation libs.androidx.appcompat

    // Hilt
    implementation libs.androidx.hilt.navigation.fragment
    implementation libs.hilt.android
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Kotlinx serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinx_serialization_version"
    implementation libs.retrofit2.kotlinx.serialization.converter

    // Accompanist
    implementation libs.accompanist.permissions

    // Room
    implementation libs.androidx.room.runtime
    ksp "androidx.room:room-compiler:$room_version"
    annotationProcessor("androidx.room:room-compiler:$room_version")
    implementation(libs.androidx.room.ktx)

    //animation
    implementation libs.androidx.animation

    //for plot charts
    implementation libs.ycharts

    //for splash screen
    implementation(libs.core.splashscreen)

}